version: "3.4"
services:
  react-app:
    image: react-app
    container_name: react-app
    tty: true
    build:
      context: react-app
      target: dev
    environment:
      NODE_ENV: development        
      LISTENING_PORT: ${REACT_APP_LISTENING_PORT}
      REACT_APP_AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVICE_LISTENING_PORT}
      DEBUG: ${DEBUG} 
    ports:
      - 3000:${REACT_APP_LISTENING_PORT}
      - 9227:9227
    volumes:       
      - ./react-app:/usr/src/node_app/react-app:delegated 
      - ./react-app/package.json:/usr/src/node_app/package.json
      - ./react-app/package-lock.json:/usr/src/node_app/package-lock.json
      - notused:/usr/src/node_app/react-app/node_modules
    depends_on:
      - auth-service
    command: ["npm", "start"]
  character-service:
    image: character-service
    container_name: character-service    
    build:
      context: character-service
      target: dev
    environment:
      NODE_ENV: development
      MONGO_URL: ${MONGO_URL}     
      LISTENING_PORT: ${CHARACTER_SERVICE_LISTENING_PORT}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}  
      DEBUG: ${DEBUG} 
    ports:
      - 3001:${CHARACTER_SERVICE_LISTENING_PORT}
      - 9229:9229
    volumes:       
      - ./character-service:/usr/src/node_app/character-service:delegated 
      - ./character-service/package.json:/usr/src/node_app/package.json
      - ./character-service/package-lock.json:/usr/src/node_app/package-lock.json
      - notused:/usr/src/node_app/character-service/node_modules
    depends_on:
      - mongo
    command: ["npm", "start"]
  auth-service:
    image: auth-service
    container_name: auth-service
    #tty: true
    build:
      context: auth-service
      target: dev
    environment:
      NODE_ENV: development
      MONGO_URL: ${MONGO_URL}     
      LISTENING_PORT: ${AUTH_SERVICE_LISTENING_PORT}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}      
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}  
      ACCESS_TOKEN_EXPIRATION_TIME: ${ACCESS_TOKEN_EXPIRATION_TIME} 
      AUTH_COOKIE_MAX_AGE: ${AUTH_COOKIE_MAX_AGE}
      ENCRYPTION_SALT_ROUNDS: ${ENCRYPTION_SALT_ROUNDS} 
      DEBUG: ${DEBUG}
    ports:
      - 3002:${AUTH_SERVICE_LISTENING_PORT}
      - 9228:9228
    volumes:
      - ./auth-service:/usr/src/node_app/auth-service:delegated 
      - ./auth-service/package.json:/usr/src/node_app/package.json
      - ./auth-service/package-lock.json:/usr/src/node_app/package-lock.json
      - notused:/usr/src/node_app/auth-service/node_modules
    depends_on:
      - mongo         
    command: ["npm", "start"]            
  mongo:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./.docker/mongodb/config/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data/db/:/data/db/
      #- ./.docker/mongodb/data/log/:/var/log/mongodb/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    command: ["-f", "/etc/mongod.conf"]  
    healthcheck:
      test: "[ `echo 'db.runCommand(\"ping\").ok' | mongo localhost/${MONGO_INITDB_DATABASE} --quiet` ] && echo 0 || echo 1"
      interval: 5s
      start_period: 10s
      timeout: 4s
      retries: 3
volumes:
  notused:
